name: Déploiement de l'app
run-name: Déploiement de l'app sur ${{ github.event.inputs.target }}

on:
  workflow_dispatch:
    inputs:
      target:
        type: choice
        description: Quel environnement ?
        options:
          - preprod
          - staging
          - prod
      is-test-app:
        type: boolean
        description: Application de test

jobs:
  build-app:
    name: Build l'app
    if: ${{ github.event.inputs.is-test-app != 'true' }}
    environment: ${{ github.event.inputs.target }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: earthly/actions-setup@v1
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          version: ^0.8.0
      - name: Login into registry
        run: docker login ghcr.io/territoiresentransitions --username "${{ secrets.GH_USER }}" --password "${{ secrets.GH_TOKEN }}"

      - name: Build and push app image
        run: >
          earthly
          --use-inline-cache --save-inline-cache --push
          --platform=linux/amd64
          +app-docker
          --ENV_NAME=${{ github.event.inputs.target }}
          --ANON_KEY=${{ secrets.ANON_KEY }}
          --API_URL=${{ secrets.API_URL }}
          --AUTH_URL=${{ vars.AUTH_URL }}
          --BACKEND_URL=${{ vars.BACKEND_URL }}
          --PANIER_URL=${{ vars.PANIER_URL }}
          --SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
          --DATADOG_CLIENT_TOKEN=${{ secrets.DATADOG_CLIENT_TOKEN }}
          --SENTRY_DSN=${{ vars.SENTRY_DSN }}
          --CRISP_WEBSITE_ID=${{ vars.CRISP_WEBSITE_ID }}

  build-test-app:
    name: Build l'app de test # TODO: only on variable change, improve to avoid duplicate
    if: ${{ github.event.inputs.is-test-app == 'true' }}
    environment: ${{ github.event.inputs.target }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: earthly/actions-setup@v1
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          version: ^0.8.0
      - name: Login into registry
        run: docker login ghcr.io/territoiresentransitions --username "${{ secrets.GH_USER }}" --password "${{ secrets.GH_TOKEN }}"

      - name: Build and push app test image
        run: >
          earthly
          --use-inline-cache --save-inline-cache --push
          --platform=linux/amd64
          +app-test-docker
          --ENV_NAME=${{ github.event.inputs.target }}
          --ANON_KEY=${{ secrets.ANON_KEY }}
          --API_URL=${{ secrets.API_URL }}
          --AUTH_URL=${{ vars.AUTH_URL }}
          --BACKEND_URL=${{ vars.BACKEND_TEST_URL }}
          --PANIER_URL=${{ vars.PANIER_URL }}
          --SENTRY_DSN=${{ vars.SENTRY_DSN }}
          --CRISP_WEBSITE_ID=${{ vars.CRISP_WEBSITE_ID }}

  deploy-app:
    name: Déploie l'app
    if: ${{ github.event.inputs.is-test-app != 'true' }}
    needs: build-app
    environment: ${{ github.event.inputs.target }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: earthly/actions-setup@v1
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          version: ^0.8.0
      - name: Login into registry
        run: docker login ghcr.io/territoiresentransitions --username "${{ secrets.GH_USER }}" --password "${{ secrets.GH_TOKEN }}"

      - name: Deploy app on Koyeb
        run: >
          earthly
          --use-inline-cache --save-inline-cache
          +app-deploy
          --ENV_NAME=${{ github.event.inputs.target }}
          --KOYEB_API_KEY=${{ secrets.KOYEB_API_KEY }}

  deploy-test-app:
    name: Déploie l'app de test
    if: ${{ github.event.inputs.is-test-app == 'true' }}
    needs: build-test-app
    environment: preprod-koyeb
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: earthly/actions-setup@v1
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          version: ^0.8.0
      - name: Login into registry
        run: docker login ghcr.io/territoiresentransitions --username "${{ secrets.GH_USER }}" --password "${{ secrets.GH_TOKEN }}"

      - name: Deploy test app on Koyeb
        run: >
          earthly
          --use-inline-cache --save-inline-cache
          +app-deploy-test
          --ENV_NAME=${{ github.event.inputs.target }}
          --KOYEB_API_KEY=${{ secrets.KOYEB_API_KEY }}

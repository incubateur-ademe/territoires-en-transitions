name: supabase-start
description: Start supabase services and export env

inputs:
  network:
    description: Docker network
    required: true
  pull:
    description: Pull image from the registry
    required: false
  background:
    description: Start in background (requires to wait for the REST API to be ready using `wait-for-url` action)
    required: false

outputs:
  started:
    description: "Tells if supabase is started (yes|no)"
    value: ${{ steps.is_started.outputs.started }}
  restored:
    description: "Contains 'success' if db volume was successfully restored"
    value: ${{ steps.restore.outputs.restored }}

runs:
  using: composite

  steps:
    - uses: supabase/setup-cli@v1
      with:
        version: latest

    - name: Try to restore db volume
      id: restore
      uses: ./.github/actions/db-restore
      with:
        pull: ${{ inputs.pull }}

    - name: Check if supabase is started
      id: is_started
      uses: ./.github/actions/supabase-started

    - name: Start services
      if: ${{ steps.is_started.outputs.started == 'no' && !inputs.background }}
      shell: bash
      run: >
        supabase start
        --exclude imgproxy,postgres-meta,logflare,vector,supavisor,studio
        --network-id ${{ inputs.network }}

    - name: Start services (in background)
      if: ${{ steps.is_started.outputs.started == 'no' && inputs.background }}
      shell: bash
      run: >
        echo "Supabase CLI version: $(supabase --version)"

        nohup supabase start
        --exclude imgproxy,postgres-meta,logflare,vector,supavisor,studio
        --network-id ${{ inputs.network }} &

        echo "Waiting for background process initialization"

        sleep 5

        echo "Supabase starting in background..."

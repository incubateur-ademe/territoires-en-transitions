// This file is auto-generated by @hey-api/openapi-ts

export type PorteurDto = {
    codeSiret?: string | null;
    referentEmail?: string | null;
    referentTelephone?: string | null;
    referentPrenom?: string | null;
    referentNom?: string | null;
    referentFonction?: string | null;
};

export type Collectivite = {
    id: string;
    nom: string;
    type: 'Commune' | 'EPCI';
    codeInsee: string | null;
    codeEpci: string | null;
    codeDepartements: string | null;
    codeRegions: string | null;
    siren: string | null;
};

export type ProjetResponse = {
    id: string;
    createdAt: string;
    updatedAt: string;
    nom: string;
    description: string | null;
    porteur: PorteurDto | null;
    collectivites: Array<Collectivite>;
    budgetPrevisionnel: number | null;
    dateDebutPrevisionnelle: string | null;
    phaseStatut: 'En cours' | 'En retard' | 'En pause' | 'Bloqué' | 'Abandonné' | 'Terminé';
    phase: 'Idée' | 'Étude' | 'Opération';
    programme: string | null;
    competences: '90-025' | '90-11' | '90-12' | '90-13' | '90-18' | '90-21' | '90-211' | '90-212' | '90-213' | '90-22' | '90-221' | '90-222' | '90-223' | '90-23' | '90-24' | '90-25' | '90-251' | '90-252' | '90-253' | '90-254' | '90-255' | '90-256' | '90-26' | '90-27' | '90-28' | '90-281' | '90-282' | '90-283' | '90-284' | '90-288' | '90-29' | '90-31' | '90-311' | '90-312' | '90-313' | '90-314' | '90-315' | '90-316' | '90-317' | '90-318' | '90-32' | '90-321' | '90-322' | '90-323' | '90-324' | '90-325' | '90-326' | '90-327' | '90-33' | '90-331' | '90-332' | '90-338' | '90-34' | '90-341' | '90-348' | '90-39' | '90-41' | '90-411' | '90-412' | '90-413' | '90-414' | '90-418' | '90-421' | '90-422' | '90-423' | '90-424' | '90-425' | '90-428' | '90-51' | '90-511' | '90-512' | '90-513' | '90-514' | '90-515' | '90-518' | '90-52' | '90-53' | '90-54' | '90-55' | '90-551' | '90-552' | '90-553' | '90-554' | '90-555' | '90-56' | '90-57' | '90-58' | '90-581' | '90-588' | '90-59' | '90-61' | '90-62' | '90-63' | '90-631' | '90-632' | '90-633' | '90-64' | '90-65' | '90-66' | '90-67' | '90-68' | '90-71' | '90-72' | '90-720' | '90-721' | '90-722' | '90-73' | '90-731' | '90-732' | '90-733' | '90-734' | '90-735' | '90-74' | '90-75' | '90-751' | '90-752' | '90-753' | '90-754' | '90-758' | '90-76' | '90-77' | '90-78' | '90-81' | '90-82' | '90-821' | '90-822' | '90-823' | '90-824' | '90-825' | '90-828' | '90-83' | '90-831' | '90-832' | '90-833' | '90-834' | '90-835' | '90-838' | '90-84' | '90-841' | '90-842' | '90-843' | '90-844' | '90-845' | '90-846' | '90-847' | '90-848' | '90-849' | '90-85' | '90-851' | '90-852' | '90-853' | '90-854' | '90-855' | '90-86' | '90-87' | '90-89';
    /**
     * Array of leviers
     */
    leviers: 'Gestion des forêts et produits bois' | 'Changements de pratiques de fertilisation azotée' | 'Elevage durable' | 'Gestion des haies' | 'Bâtiments & Machines agricoles' | 'Gestion des prairies' | 'Pratiques stockantes' | 'Sobriété foncière' | 'Surface en aire protégée' | 'Résorption des points noirs prioritaires de continuité écologique' | 'Restauration des habitats naturels' | "Réduction de l'usage des produits phytosanitaires" | "Développement de l'agriculture biologique et de HVE" | "Respect d'Egalim pour la restauration collective" | 'Sobriété des bâtiments (résidentiel)' | 'Changement chaudières fioul + rénovation (résidentiel)' | 'Changement chaudières gaz + rénovation (résidentiel)' | 'Rénovation (hors changement chaudières)' | 'Sobriété des bâtiments (tertiaire)' | 'Changement chaudières fioul + rénovation (tertiaire)' | 'Changement chaudières gaz + rénovation (tertiaire)' | 'Gaz fluorés résidentiel' | 'Gaz fluorés tertiaire' | 'Captage de méthane dans les ISDND' | 'Prévention des déchets' | 'Valorisation matière des déchets' | 'Moindre stockage en décharge' | 'Augmentation du taux de collecte' | "Sobriété dans l'utilisation de la ressource en eau" | "Protection des zones de captage d'eau" | 'Désimperméabilisation des sols' | 'Electricité renouvelable' | 'Biogaz' | 'Réseaux de chaleur décarbonés' | 'Top 50 sites industriels' | 'Industrie diffuse' | 'Fret décarboné et multimodalité' | 'Efficacité et sobriété logistique' | 'Réduction des déplacements' | 'Covoiturage' | 'Vélo' | 'Transports en commun' | 'Véhicules électriques' | 'Efficacité énergétique des véhicules privés' | 'Bus et cars décarbonés' | '2 roues (élec&efficacité)' | 'Nucléaire' | 'Bio-carburants' | 'Efficacité des aéronefs' | 'SAF';
    mecId: string | null;
    tetId: string | null;
    recocoId: string | null;
};

export type ErrorResponse = {
    /**
     * HTTP status code
     */
    statusCode: number;
    /**
     * Error message
     */
    message: string;
};

export type ExtraField = {
    /**
     * Name of the extra field
     */
    name: string;
    /**
     * Value of the extra field
     */
    value: string;
};

export type ProjetExtraFieldsResponse = {
    /**
     * Array of extra field names, values, and labels
     */
    extraFields: Array<ExtraField>;
};

export type CreateProjetExtraFieldRequest = {
    /**
     * Array of extra field names, values, and labels
     */
    extraFields: Array<ExtraField>;
};

export type CollectiviteReference = {
    /**
     * Types of the collectivite
     */
    type: 'Commune' | 'EPCI';
    /**
     * Code of the collectivite, codeInsee for communes and codeEpci/siren for EPCI
     */
    code: string;
};

export type CreateProjetRequest = {
    nom: string;
    description?: string | null;
    porteur?: PorteurDto | null;
    budgetPrevisionnel?: number | null;
    /**
     * Forecasted start date in YYYY-MM-DD format
     */
    dateDebutPrevisionnelle?: string | null;
    /**
     * Current Phase for the project
     */
    phase?: 'Idée' | 'Étude' | 'Opération';
    /**
     * Current phase status for the phase
     */
    phaseStatut?: 'En cours' | 'En retard' | 'En pause' | 'Bloqué' | 'Abandonné' | 'Terminé';
    programme?: string | null;
    /**
     * Array of collectivite references
     */
    collectivites: Array<CollectiviteReference>;
    /**
     * Array of competences and sous-competences
     */
    competences?: Array<'90-025' | '90-11' | '90-12' | '90-13' | '90-18' | '90-21' | '90-211' | '90-212' | '90-213' | '90-22' | '90-221' | '90-222' | '90-223' | '90-23' | '90-24' | '90-25' | '90-251' | '90-252' | '90-253' | '90-254' | '90-255' | '90-256' | '90-26' | '90-27' | '90-28' | '90-281' | '90-282' | '90-283' | '90-284' | '90-288' | '90-29' | '90-31' | '90-311' | '90-312' | '90-313' | '90-314' | '90-315' | '90-316' | '90-317' | '90-318' | '90-32' | '90-321' | '90-322' | '90-323' | '90-324' | '90-325' | '90-326' | '90-327' | '90-33' | '90-331' | '90-332' | '90-338' | '90-34' | '90-341' | '90-348' | '90-39' | '90-41' | '90-411' | '90-412' | '90-413' | '90-414' | '90-418' | '90-421' | '90-422' | '90-423' | '90-424' | '90-425' | '90-428' | '90-51' | '90-511' | '90-512' | '90-513' | '90-514' | '90-515' | '90-518' | '90-52' | '90-53' | '90-54' | '90-55' | '90-551' | '90-552' | '90-553' | '90-554' | '90-555' | '90-56' | '90-57' | '90-58' | '90-581' | '90-588' | '90-59' | '90-61' | '90-62' | '90-63' | '90-631' | '90-632' | '90-633' | '90-64' | '90-65' | '90-66' | '90-67' | '90-68' | '90-71' | '90-72' | '90-720' | '90-721' | '90-722' | '90-73' | '90-731' | '90-732' | '90-733' | '90-734' | '90-735' | '90-74' | '90-75' | '90-751' | '90-752' | '90-753' | '90-754' | '90-758' | '90-76' | '90-77' | '90-78' | '90-81' | '90-82' | '90-821' | '90-822' | '90-823' | '90-824' | '90-825' | '90-828' | '90-83' | '90-831' | '90-832' | '90-833' | '90-834' | '90-835' | '90-838' | '90-84' | '90-841' | '90-842' | '90-843' | '90-844' | '90-845' | '90-846' | '90-847' | '90-848' | '90-849' | '90-85' | '90-851' | '90-852' | '90-853' | '90-854' | '90-855' | '90-86' | '90-87' | '90-89'> | null;
    /**
     * Array of leviers de la transition écologique
     */
    leviers?: Array<'Gestion des forêts et produits bois' | 'Changements de pratiques de fertilisation azotée' | 'Elevage durable' | 'Gestion des haies' | 'Bâtiments & Machines agricoles' | 'Gestion des prairies' | 'Pratiques stockantes' | 'Sobriété foncière' | 'Surface en aire protégée' | 'Résorption des points noirs prioritaires de continuité écologique' | 'Restauration des habitats naturels' | "Réduction de l'usage des produits phytosanitaires" | "Développement de l'agriculture biologique et de HVE" | "Respect d'Egalim pour la restauration collective" | 'Sobriété des bâtiments (résidentiel)' | 'Changement chaudières fioul + rénovation (résidentiel)' | 'Changement chaudières gaz + rénovation (résidentiel)' | 'Rénovation (hors changement chaudières)' | 'Sobriété des bâtiments (tertiaire)' | 'Changement chaudières fioul + rénovation (tertiaire)' | 'Changement chaudières gaz + rénovation (tertiaire)' | 'Gaz fluorés résidentiel' | 'Gaz fluorés tertiaire' | 'Captage de méthane dans les ISDND' | 'Prévention des déchets' | 'Valorisation matière des déchets' | 'Moindre stockage en décharge' | 'Augmentation du taux de collecte' | "Sobriété dans l'utilisation de la ressource en eau" | "Protection des zones de captage d'eau" | 'Désimperméabilisation des sols' | 'Electricité renouvelable' | 'Biogaz' | 'Réseaux de chaleur décarbonés' | 'Top 50 sites industriels' | 'Industrie diffuse' | 'Fret décarboné et multimodalité' | 'Efficacité et sobriété logistique' | 'Réduction des déplacements' | 'Covoiturage' | 'Vélo' | 'Transports en commun' | 'Véhicules électriques' | 'Efficacité énergétique des véhicules privés' | 'Bus et cars décarbonés' | '2 roues (élec&efficacité)' | 'Nucléaire' | 'Bio-carburants' | 'Efficacité des aéronefs' | 'SAF'> | null;
    externalId: string;
};

export type CreateOrUpdateProjetResponse = {
    id: string;
};

export type BulkCreateProjetsRequest = {
    projects: Array<CreateProjetRequest>;
};

export type BulkCreateProjetsResponse = {
    ids: Array<string>;
};

export type UpdateProjetRequest = {
    nom?: string;
    description?: string | null;
    porteur?: PorteurDto | null;
    budgetPrevisionnel?: number | null;
    /**
     * Forecasted start date in YYYY-MM-DD format
     */
    dateDebutPrevisionnelle?: string | null;
    /**
     * Current Phase for the project
     */
    phase?: 'Idée' | 'Étude' | 'Opération';
    /**
     * Current phase status for the phase
     */
    phaseStatut?: 'En cours' | 'En retard' | 'En pause' | 'Bloqué' | 'Abandonné' | 'Terminé';
    programme?: string | null;
    /**
     * Array of collectivite references
     */
    collectivites?: Array<CollectiviteReference>;
    /**
     * Array of competences and sous-competences
     */
    competences?: Array<'90-025' | '90-11' | '90-12' | '90-13' | '90-18' | '90-21' | '90-211' | '90-212' | '90-213' | '90-22' | '90-221' | '90-222' | '90-223' | '90-23' | '90-24' | '90-25' | '90-251' | '90-252' | '90-253' | '90-254' | '90-255' | '90-256' | '90-26' | '90-27' | '90-28' | '90-281' | '90-282' | '90-283' | '90-284' | '90-288' | '90-29' | '90-31' | '90-311' | '90-312' | '90-313' | '90-314' | '90-315' | '90-316' | '90-317' | '90-318' | '90-32' | '90-321' | '90-322' | '90-323' | '90-324' | '90-325' | '90-326' | '90-327' | '90-33' | '90-331' | '90-332' | '90-338' | '90-34' | '90-341' | '90-348' | '90-39' | '90-41' | '90-411' | '90-412' | '90-413' | '90-414' | '90-418' | '90-421' | '90-422' | '90-423' | '90-424' | '90-425' | '90-428' | '90-51' | '90-511' | '90-512' | '90-513' | '90-514' | '90-515' | '90-518' | '90-52' | '90-53' | '90-54' | '90-55' | '90-551' | '90-552' | '90-553' | '90-554' | '90-555' | '90-56' | '90-57' | '90-58' | '90-581' | '90-588' | '90-59' | '90-61' | '90-62' | '90-63' | '90-631' | '90-632' | '90-633' | '90-64' | '90-65' | '90-66' | '90-67' | '90-68' | '90-71' | '90-72' | '90-720' | '90-721' | '90-722' | '90-73' | '90-731' | '90-732' | '90-733' | '90-734' | '90-735' | '90-74' | '90-75' | '90-751' | '90-752' | '90-753' | '90-754' | '90-758' | '90-76' | '90-77' | '90-78' | '90-81' | '90-82' | '90-821' | '90-822' | '90-823' | '90-824' | '90-825' | '90-828' | '90-83' | '90-831' | '90-832' | '90-833' | '90-834' | '90-835' | '90-838' | '90-84' | '90-841' | '90-842' | '90-843' | '90-844' | '90-845' | '90-846' | '90-847' | '90-848' | '90-849' | '90-85' | '90-851' | '90-852' | '90-853' | '90-854' | '90-855' | '90-86' | '90-87' | '90-89'> | null;
    /**
     * Array of leviers de la transition écologique
     */
    leviers?: Array<'Gestion des forêts et produits bois' | 'Changements de pratiques de fertilisation azotée' | 'Elevage durable' | 'Gestion des haies' | 'Bâtiments & Machines agricoles' | 'Gestion des prairies' | 'Pratiques stockantes' | 'Sobriété foncière' | 'Surface en aire protégée' | 'Résorption des points noirs prioritaires de continuité écologique' | 'Restauration des habitats naturels' | "Réduction de l'usage des produits phytosanitaires" | "Développement de l'agriculture biologique et de HVE" | "Respect d'Egalim pour la restauration collective" | 'Sobriété des bâtiments (résidentiel)' | 'Changement chaudières fioul + rénovation (résidentiel)' | 'Changement chaudières gaz + rénovation (résidentiel)' | 'Rénovation (hors changement chaudières)' | 'Sobriété des bâtiments (tertiaire)' | 'Changement chaudières fioul + rénovation (tertiaire)' | 'Changement chaudières gaz + rénovation (tertiaire)' | 'Gaz fluorés résidentiel' | 'Gaz fluorés tertiaire' | 'Captage de méthane dans les ISDND' | 'Prévention des déchets' | 'Valorisation matière des déchets' | 'Moindre stockage en décharge' | 'Augmentation du taux de collecte' | "Sobriété dans l'utilisation de la ressource en eau" | "Protection des zones de captage d'eau" | 'Désimperméabilisation des sols' | 'Electricité renouvelable' | 'Biogaz' | 'Réseaux de chaleur décarbonés' | 'Top 50 sites industriels' | 'Industrie diffuse' | 'Fret décarboné et multimodalité' | 'Efficacité et sobriété logistique' | 'Réduction des déplacements' | 'Covoiturage' | 'Vélo' | 'Transports en commun' | 'Véhicules électriques' | 'Efficacité énergétique des véhicules privés' | 'Bus et cars décarbonés' | '2 roues (élec&efficacité)' | 'Nucléaire' | 'Bio-carburants' | 'Efficacité des aéronefs' | 'SAF'> | null;
    externalId: string;
};

export type ExtraFieldConfig = {
    /**
     * Name of the extra field
     */
    name: string;
    /**
     * Value of the extra field
     */
    label: string;
};

export type ServicesByProjectIdResponse = {
    id: string;
    name: string;
    description: string;
    sousTitre: string;
    redirectionUrl: string;
    logoUrl: string;
    /**
     * Array of extra field definitions with name and label
     */
    extraFields: Array<ExtraFieldConfig>;
    isListed: boolean;
    redirectionLabel: string | null;
    iframeUrl: string | null;
    extendLabel: string | null;
};

export type CreateServiceRequest = {
    /**
     * The name of the service
     */
    name: string;
    /**
     * Objectivez votre diagnostic avec les données socio-économiques qui rendent votre territoire unique et découvrez des arguments et ressources pour mobiliser vos collègues et partenaires externes sur l'adaptation au changement climatique.
     */
    sousTitre: string;
    description: string;
    /**
     * The URL of the service logo
     */
    logoUrl: string;
    /**
     * The URL of the service
     */
    redirectionUrl: string;
    /**
     * label of the redirection
     */
    redirectionLabel?: string | null;
    iframeUrl?: string | null;
    extendLabel?: string | null;
    /**
     * Whether the service will be associated with projects
     */
    isListed?: boolean;
};

export type CreateServiceResponse = {
    id: string;
    name: string;
    description: string;
    sousTitre: string;
    logoUrl: string;
    redirectionUrl: string;
    redirectionLabel: {
        [key: string]: unknown;
    } | null;
    iframeUrl: {
        [key: string]: unknown;
    } | null;
    extendLabel: {
        [key: string]: unknown;
    } | null;
};

export type CreateServiceContextRequest = {
    /**
     * Array of competences and sous-competences, empty array means all competences/sous-competences
     */
    competences: Array<'90-025' | '90-11' | '90-12' | '90-13' | '90-18' | '90-21' | '90-211' | '90-212' | '90-213' | '90-22' | '90-221' | '90-222' | '90-223' | '90-23' | '90-24' | '90-25' | '90-251' | '90-252' | '90-253' | '90-254' | '90-255' | '90-256' | '90-26' | '90-27' | '90-28' | '90-281' | '90-282' | '90-283' | '90-284' | '90-288' | '90-29' | '90-31' | '90-311' | '90-312' | '90-313' | '90-314' | '90-315' | '90-316' | '90-317' | '90-318' | '90-32' | '90-321' | '90-322' | '90-323' | '90-324' | '90-325' | '90-326' | '90-327' | '90-33' | '90-331' | '90-332' | '90-338' | '90-34' | '90-341' | '90-348' | '90-39' | '90-41' | '90-411' | '90-412' | '90-413' | '90-414' | '90-418' | '90-421' | '90-422' | '90-423' | '90-424' | '90-425' | '90-428' | '90-51' | '90-511' | '90-512' | '90-513' | '90-514' | '90-515' | '90-518' | '90-52' | '90-53' | '90-54' | '90-55' | '90-551' | '90-552' | '90-553' | '90-554' | '90-555' | '90-56' | '90-57' | '90-58' | '90-581' | '90-588' | '90-59' | '90-61' | '90-62' | '90-63' | '90-631' | '90-632' | '90-633' | '90-64' | '90-65' | '90-66' | '90-67' | '90-68' | '90-71' | '90-72' | '90-720' | '90-721' | '90-722' | '90-73' | '90-731' | '90-732' | '90-733' | '90-734' | '90-735' | '90-74' | '90-75' | '90-751' | '90-752' | '90-753' | '90-754' | '90-758' | '90-76' | '90-77' | '90-78' | '90-81' | '90-82' | '90-821' | '90-822' | '90-823' | '90-824' | '90-825' | '90-828' | '90-83' | '90-831' | '90-832' | '90-833' | '90-834' | '90-835' | '90-838' | '90-84' | '90-841' | '90-842' | '90-843' | '90-844' | '90-845' | '90-846' | '90-847' | '90-848' | '90-849' | '90-85' | '90-851' | '90-852' | '90-853' | '90-854' | '90-855' | '90-86' | '90-87' | '90-89'> | null;
    /**
     * Array of leviers, empty array means all leviers
     */
    leviers: Array<'Gestion des forêts et produits bois' | 'Changements de pratiques de fertilisation azotée' | 'Elevage durable' | 'Gestion des haies' | 'Bâtiments & Machines agricoles' | 'Gestion des prairies' | 'Pratiques stockantes' | 'Sobriété foncière' | 'Surface en aire protégée' | 'Résorption des points noirs prioritaires de continuité écologique' | 'Restauration des habitats naturels' | "Réduction de l'usage des produits phytosanitaires" | "Développement de l'agriculture biologique et de HVE" | "Respect d'Egalim pour la restauration collective" | 'Sobriété des bâtiments (résidentiel)' | 'Changement chaudières fioul + rénovation (résidentiel)' | 'Changement chaudières gaz + rénovation (résidentiel)' | 'Rénovation (hors changement chaudières)' | 'Sobriété des bâtiments (tertiaire)' | 'Changement chaudières fioul + rénovation (tertiaire)' | 'Changement chaudières gaz + rénovation (tertiaire)' | 'Gaz fluorés résidentiel' | 'Gaz fluorés tertiaire' | 'Captage de méthane dans les ISDND' | 'Prévention des déchets' | 'Valorisation matière des déchets' | 'Moindre stockage en décharge' | 'Augmentation du taux de collecte' | "Sobriété dans l'utilisation de la ressource en eau" | "Protection des zones de captage d'eau" | 'Désimperméabilisation des sols' | 'Electricité renouvelable' | 'Biogaz' | 'Réseaux de chaleur décarbonés' | 'Top 50 sites industriels' | 'Industrie diffuse' | 'Fret décarboné et multimodalité' | 'Efficacité et sobriété logistique' | 'Réduction des déplacements' | 'Covoiturage' | 'Vélo' | 'Transports en commun' | 'Véhicules électriques' | 'Efficacité énergétique des véhicules privés' | 'Bus et cars décarbonés' | '2 roues (élec&efficacité)' | 'Nucléaire' | 'Bio-carburants' | 'Efficacité des aéronefs' | 'SAF'> | null;
    /**
     * Project phases for which the serviceContext applies, empty array means all phases
     */
    phases: Array<'Idée' | 'Étude' | 'Opération'> | null;
    description?: string | null;
    sousTitre?: string | null;
    /**
     * Custom logo URL for the service in this context
     */
    logoUrl?: string | null;
    /**
     * Custom redirection URL for the service in this context
     */
    redirectionUrl?: string | null;
    /**
     * Custom label for the redirection button
     */
    redirectionLabel?: string | null;
    /**
     * Custom label for expanding the service details
     */
    extendLabel?: string | null;
    iframeUrl?: string | null;
    /**
     * Array of extra field definitions required for this service context
     */
    extraFields?: Array<ExtraFieldConfig> | null;
};

export type CreateServiceContextResponse = {
    id: string;
};

export type ProjetsControllerFindAllData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/projets';
};

export type ProjetsControllerFindAllErrors = {
    /**
     * Error response
     */
    default: ErrorResponse;
};

export type ProjetsControllerFindAllError = ProjetsControllerFindAllErrors[keyof ProjetsControllerFindAllErrors];

export type ProjetsControllerFindAllResponses = {
    200: Array<ProjetResponse>;
};

export type ProjetsControllerFindAllResponse = ProjetsControllerFindAllResponses[keyof ProjetsControllerFindAllResponses];

export type ProjetsControllerCreateData = {
    body: CreateProjetRequest;
    path?: never;
    query?: never;
    url: '/projets';
};

export type ProjetsControllerCreateErrors = {
    /**
     * Error response
     */
    default: ErrorResponse;
};

export type ProjetsControllerCreateError = ProjetsControllerCreateErrors[keyof ProjetsControllerCreateErrors];

export type ProjetsControllerCreateResponses = {
    /**
     * Projet created successfully
     */
    201: CreateOrUpdateProjetResponse;
};

export type ProjetsControllerCreateResponse = ProjetsControllerCreateResponses[keyof ProjetsControllerCreateResponses];

export type ProjetsControllerFindOneData = {
    body?: never;
    path: {
        /**
         * An Id in a UUID format
         */
        id: string;
    };
    query?: never;
    url: '/projets/{id}';
};

export type ProjetsControllerFindOneErrors = {
    /**
     * Error response
     */
    default: ErrorResponse;
};

export type ProjetsControllerFindOneError = ProjetsControllerFindOneErrors[keyof ProjetsControllerFindOneErrors];

export type ProjetsControllerFindOneResponses = {
    200: ProjetResponse;
};

export type ProjetsControllerFindOneResponse = ProjetsControllerFindOneResponses[keyof ProjetsControllerFindOneResponses];

export type ProjetsControllerUpdateData = {
    body: UpdateProjetRequest;
    path: {
        /**
         * An Id in a UUID format
         */
        id: string;
    };
    query?: never;
    url: '/projets/{id}';
};

export type ProjetsControllerUpdateErrors = {
    /**
     * Error response
     */
    default: ErrorResponse;
};

export type ProjetsControllerUpdateError = ProjetsControllerUpdateErrors[keyof ProjetsControllerUpdateErrors];

export type ProjetsControllerUpdateResponses = {
    /**
     * Projet updated successfully
     */
    200: CreateOrUpdateProjetResponse;
};

export type ProjetsControllerUpdateResponse = ProjetsControllerUpdateResponses[keyof ProjetsControllerUpdateResponses];

export type ProjetsControllerGetExtraFieldsData = {
    body?: never;
    path: {
        /**
         * An Id in a UUID format
         */
        id: string;
    };
    query?: never;
    url: '/projets/{id}/extra-fields';
};

export type ProjetsControllerGetExtraFieldsErrors = {
    /**
     * Error response
     */
    default: ErrorResponse;
};

export type ProjetsControllerGetExtraFieldsError = ProjetsControllerGetExtraFieldsErrors[keyof ProjetsControllerGetExtraFieldsErrors];

export type ProjetsControllerGetExtraFieldsResponses = {
    200: ProjetExtraFieldsResponse;
};

export type ProjetsControllerGetExtraFieldsResponse = ProjetsControllerGetExtraFieldsResponses[keyof ProjetsControllerGetExtraFieldsResponses];

export type ProjetsControllerUpdateExtraFieldsData = {
    body: CreateProjetExtraFieldRequest;
    path: {
        /**
         * An Id in a UUID format
         */
        id: string;
    };
    query?: never;
    url: '/projets/{id}/extra-fields';
};

export type ProjetsControllerUpdateExtraFieldsErrors = {
    /**
     * Error response
     */
    default: ErrorResponse;
};

export type ProjetsControllerUpdateExtraFieldsError = ProjetsControllerUpdateExtraFieldsErrors[keyof ProjetsControllerUpdateExtraFieldsErrors];

export type ProjetsControllerUpdateExtraFieldsResponses = {
    201: ProjetExtraFieldsResponse;
};

export type ProjetsControllerUpdateExtraFieldsResponse = ProjetsControllerUpdateExtraFieldsResponses[keyof ProjetsControllerUpdateExtraFieldsResponses];

export type ProjetsControllerCreateBulkData = {
    body: BulkCreateProjetsRequest;
    path?: never;
    query?: never;
    url: '/projets/bulk';
};

export type ProjetsControllerCreateBulkErrors = {
    /**
     * Error response
     */
    default: ErrorResponse;
};

export type ProjetsControllerCreateBulkError = ProjetsControllerCreateBulkErrors[keyof ProjetsControllerCreateBulkErrors];

export type ProjetsControllerCreateBulkResponses = {
    /**
     * Bulk Projets created successfully
     */
    201: BulkCreateProjetsResponse;
};

export type ProjetsControllerCreateBulkResponse = ProjetsControllerCreateBulkResponses[keyof ProjetsControllerCreateBulkResponses];

export type ServicesControllerGetServicesByProjectIdData = {
    body?: never;
    path: {
        /**
         * An Id in a UUID format
         */
        id: string;
    };
    query: {
        debug: boolean;
    };
    url: '/services/project/{id}';
};

export type ServicesControllerGetServicesByProjectIdErrors = {
    /**
     * Error response
     */
    default: ErrorResponse;
};

export type ServicesControllerGetServicesByProjectIdError = ServicesControllerGetServicesByProjectIdErrors[keyof ServicesControllerGetServicesByProjectIdErrors];

export type ServicesControllerGetServicesByProjectIdResponses = {
    200: Array<ServicesByProjectIdResponse>;
};

export type ServicesControllerGetServicesByProjectIdResponse = ServicesControllerGetServicesByProjectIdResponses[keyof ServicesControllerGetServicesByProjectIdResponses];

export type ServicesControllerCreateData = {
    body: CreateServiceRequest;
    path?: never;
    query?: never;
    url: '/services';
};

export type ServicesControllerCreateErrors = {
    /**
     * Error response
     */
    default: ErrorResponse;
};

export type ServicesControllerCreateError = ServicesControllerCreateErrors[keyof ServicesControllerCreateErrors];

export type ServicesControllerCreateResponses = {
    /**
     * Service created successfully
     */
    201: CreateServiceResponse;
};

export type ServicesControllerCreateResponse = ServicesControllerCreateResponses[keyof ServicesControllerCreateResponses];

export type ServicesControllerCreateServiceContextData = {
    body: CreateServiceContextRequest;
    path: {
        /**
         * An Id in a UUID format
         */
        id: string;
    };
    query?: never;
    url: '/services/contexts/{id}';
};

export type ServicesControllerCreateServiceContextErrors = {
    /**
     * Error response
     */
    default: ErrorResponse;
};

export type ServicesControllerCreateServiceContextError = ServicesControllerCreateServiceContextErrors[keyof ServicesControllerCreateServiceContextErrors];

export type ServicesControllerCreateServiceContextResponses = {
    /**
     * Service context created successfully
     */
    201: CreateServiceContextResponse;
};

export type ServicesControllerCreateServiceContextResponse = ServicesControllerCreateServiceContextResponses[keyof ServicesControllerCreateServiceContextResponses];

export type ClientOptions = {
    baseUrl: string;
};